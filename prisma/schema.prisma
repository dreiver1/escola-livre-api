generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Turma {
  id                       String       @id @default(cuid())
  nome                     String
  alunos                   Aluno[]
  frequencia               Frequencia[]
  professores              professores? @relation(fields: [professoresIdprofessores], references: [idprofessores])
  professoresIdprofessores String?
}

model Frequencia {
  id            String  @id @default(cuid())
  mes           Mes[]
  aluno         Aluno?  @relation(fields: [alunosIdAluno], references: [idAluno])
  turma         Turma?  @relation(fields: [turmaId], references: [id])
  alunosIdAluno String?
  turmaId       String?
}

model Aluno {
  idAluno                   String           @id @default(cuid())
  nome                      String           @db.VarChar(45)
  dataNascimento            String           @db.VarChar(45)
  celular                   String           @db.VarChar(45)
  email                     String           @db.VarChar(45)
  senha                     String           @db.VarChar(45)
  cpf                       String?          @db.VarChar(45)
  professores_idprofessores String?
  notas                     notas[]
  parecerDoAluno            parecerDoAluno[]
  Frequencia                Frequencia[]
  Turma                     Turma?           @relation(fields: [turmaId], references: [id])
  turmaId                   String?

  @@index([professores_idprofessores], map: "fk_alunos_professores_idx")
}

model Mes {
  id           Int         @id @default(autoincrement())
  nome         String
  a01          Boolean     @default(false)
  a02          Boolean     @default(false)
  a03          Boolean     @default(false)
  a04          Boolean     @default(false)
  a05          Boolean     @default(false)
  a06          Boolean     @default(false)
  a07          Boolean     @default(false)
  a08          Boolean     @default(false)
  a09          Boolean     @default(false)
  a10          Boolean     @default(false)
  a11          Boolean     @default(false)
  a12          Boolean     @default(false)
  a13          Boolean     @default(false)
  a14          Boolean     @default(false)
  a15          Boolean     @default(false)
  a16          Boolean     @default(false)
  a17          Boolean     @default(false)
  a18          Boolean     @default(false)
  a19          Boolean     @default(false)
  a20          Boolean     @default(false)
  a21          Boolean     @default(false)
  a22          Boolean     @default(false)
  a23          Boolean     @default(false)
  a24          Boolean     @default(false)
  a25          Boolean     @default(false)
  a26          Boolean     @default(false)
  a27          Boolean     @default(false)
  a28          Boolean     @default(false)
  a29          Boolean     @default(false)
  a30          Boolean     @default(false)
  a31          Boolean     @default(false)
  Frequencia   Frequencia? @relation(fields: [frequenciaId], references: [id])
  frequenciaId String?
}

model administradores {
  idAdm          Int           @id @default(autoincrement())
  nome           String        @db.VarChar(45)
  dataNascimento String        @db.VarChar(45)
  cpf            String        @db.VarChar(45)
  celular        String        @db.VarChar(45)
  email          String        @db.VarChar(45)
  senha          String        @db.VarChar(45)
  professores    professores[]

  @@unique(fields: [email], name: "usuario")
}

model notas {
  idnotas       Int     @id @default(autoincrement())
  nota01        Float?
  nota02        Float?
  nota03        Float?
  nota04        Float?
  alunos        Aluno?  @relation(fields: [alunosIdAluno], references: [idAluno])
  alunosIdAluno String?
}

model parecerDoAluno {
  idparecerDoAluno Int    @id
  alunos_idAluno   String
  alunos           Aluno  @relation(fields: [alunos_idAluno], references: [idAluno], onDelete: NoAction, onUpdate: NoAction, map: "fk_parecerDoAluno_alunos1")

  @@index([alunos_idAluno], map: "fk_parecerDoAluno_alunos1_idx")
}

model professores {
  idprofessores         String           @id @default(cuid())
  nome                  String?          @db.VarChar(45)
  dataNascimento        String?          @db.VarChar(45)
  celular               String?          @db.VarChar(45)
  cpf                   String?          @db.VarChar(45)
  email                 String?          @db.VarChar(45)
  senha                 String?          @db.VarChar(45)
  administradores_idAdm Int?
  administradores       administradores? @relation(fields: [administradores_idAdm], references: [idAdm], onDelete: NoAction, onUpdate: NoAction, map: "fk_professores_administradores1")
  turmas                Turma[]

  @@index([administradores_idAdm], map: "fk_professores_administradores1_idx")
}
